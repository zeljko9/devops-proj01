name: Terraform Execution

on:
  workflow_call:
    inputs:
      env:
        type: string
      provider:
        type: string
      trigger_path:
         type: string
      tfvars_path:
         type: string
      
jobs:
  terraform:
    name: Terraform ${{ inputs.env }} - ${{ inputs.provider }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get modified files
        id: changed_files
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            MODIFIED_FILES=$(git diff --name-only HEAD~1)
          else
            git fetch origin ${{ github.event.before }}
            MODIFIED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          fi
          echo "Modified files: $MODIFIED_FILES"
          echo "modified<<EOF" >> $GITHUB_OUTPUT
          echo "$MODIFIED_FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Decide if Terraform should run
        id: should_run
        run: |
          MODIFIED_FILES="${{ steps.changed_files.outputs.modified }}"
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] || \
             [[ "$MODIFIED_FILES" == *"infrastructure/modules/"* ]] || \
             [[ "$MODIFIED_FILES" == *"infrastructure/deployment/${{ inputs.provider }}/varvalues/${{ inputs.env }}.tfvars"* ]] || \
             [[ "$MODIFIED_FILES" == *"infrastructure/deployment/${{ inputs.provider }}/" ]]; then
            echo "run=true" >> $GITHUB_OUTPUT
          else
            echo "run=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.4

      - name: Azure Login via OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      
      - name: Get Public IP
        id: ip
        run: echo "ip=$(curl -s https://api.ipify.org)" >> $GITHUB_OUTPUT

      
      - name: Add IP to Azure Storage Firewall
        run: |
          az storage account network-rule add \
            --resource-group devops-1-${{ inputs.env }}-euw-proj01-00 \
            --account-name 000devops${{ inputs.env }}euwproj01stg \
            --ip-address ${{ steps.ip.outputs.ip }}

      
      - name: Terraform Init
        working-directory: ./infrastructure/deployment/${{ inputs.provider }}
        run: terraform init -backend-config=./backend/${{ inputs.env }}.backend.config

      - name: Terraform Format Check
        if: github.ref != 'refs/heads/main'
        working-directory: ./infrastructure/
        run: terraform fmt -check -recursive || echo "::warning::Terraform fmt check failed"
        continue-on-error: true

      - name: Terraform Validate
        if: github.ref != 'refs/heads/main'
        working-directory: ./infrastructure/deployment/${{ inputs.provider }}
        run: terraform validate

      # - name: Security Check
      #   if: github.ref == 'refs/heads/main'
      #   uses: aquasecurity/tfsec-action@v1.0.0
      #   with:
      #     working_directory: infrastructure/deployment/${{ inputs.provider }}

      - name: Terraform Plan
        working-directory: ./infrastructure/deployment/${{ inputs.provider }}
        run: terraform plan -var-file=./varvalues/${{ inputs.env }}.tfvars -out=tfplan

      - name: Manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: zeljko.m99@hotmail.com
          minimum-approvals: 1
          issue-title: "Manual Approval Required for Terraform Apply"
          issue-body: "Please approve or deny the deployment."

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        working-directory: ./infrastructure/deployment/${{ inputs.provider }}
        run: terraform apply tfplan

      - name: Export Ansible inventory
        if: inputs.provider == 'services'
        working-directory: ./infrastructure/deployment/${{ inputs.provider }}
        run: terraform output -raw ansible_inventory > ./ansible/inventory/${{ inputs.env }}.ini

      - name: Remove IP to Azure Storage Firewall
        run: |
          az storage account network-rule remove \
            --resource-group devops-1-${{ inputs.env }}-euw-proj01-00 \
            --account-name 000devops${{ inputs.env }}euwproj01stg \
            --ip-address ${{ steps.ip.outputs.ip }}

      - name: Setup Ansible
        if: inputs.provider == 'services'
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: ./ansible/playbooks/deploy.yml
          inventory: ./ansible/inventory/${{ inputs.env }}.ini
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          options: |
            -e "env_name=${{ inputs.env }}"